
test3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000360  000003f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000360  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800108  00800108  000003fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000042c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008fb  00000000  00000000  0000049c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d2  00000000  00000000  00000d97  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002c4  00000000  00000000  00001569  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001830  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ed  00000000  00000000  000018c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e5  00000000  00000000  00001cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001d96  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	29 c0       	rjmp	.+82     	; 0xc8 <__vector_29>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e6       	ldi	r30, 0x60	; 96
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 30       	cpi	r26, 0x08	; 8
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e0       	ldi	r26, 0x08	; 8
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 31       	cpi	r26, 0x12	; 18
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	dd d0       	rcall	.+442    	; 0x27e <main>
  c4:	4b c1       	rjmp	.+662    	; 0x35c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_29>:
}


//———————————————
ISR (TIMER3_OVF_vect) //функция по таймеру 3, крутит двигатель с определённой задержкой
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	ef 93       	push	r30
  f0:	ff 93       	push	r31
	TCNT3 = 65535;
  f2:	8f ef       	ldi	r24, 0xFF	; 255
  f4:	9f ef       	ldi	r25, 0xFF	; 255
  f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	ms++;
  fe:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__data_end>
 102:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__data_end+0x1>
 106:	31 96       	adiw	r30, 0x01	; 1
 108:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__data_end+0x1>
 10c:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__data_end>
	my_time ++;
 110:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <my_time>
 114:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <my_time+0x1>
 118:	01 96       	adiw	r24, 0x01	; 1
 11a:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <my_time+0x1>
 11e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <my_time>
	if (my_time * 23 > k/v){
 122:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <v>
 126:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <v+0x1>
 12a:	47 e1       	ldi	r20, 0x17	; 23
 12c:	48 9f       	mul	r20, r24
 12e:	90 01       	movw	r18, r0
 130:	49 9f       	mul	r20, r25
 132:	30 0d       	add	r19, r0
 134:	11 24       	eor	r1, r1
 136:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <k>
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	be 01       	movw	r22, r28
 13e:	a9 d0       	rcall	.+338    	; 0x292 <__divmodhi4>
 140:	62 17       	cp	r22, r18
 142:	73 07       	cpc	r23, r19
 144:	20 f5       	brcc	.+72     	; 0x18e <__vector_29+0xc6>
		my_time = 0;
 146:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <my_time+0x1>
 14a:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <my_time>
		if (v>0){i=(i+1)%4;}
 14e:	1c 16       	cp	r1, r28
 150:	1d 06       	cpc	r1, r29
 152:	7c f4       	brge	.+30     	; 0x172 <__vector_29+0xaa>
 154:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <i>
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	83 70       	andi	r24, 0x03	; 3
 15e:	90 78       	andi	r25, 0x80	; 128
 160:	99 23       	and	r25, r25
 162:	24 f4       	brge	.+8      	; 0x16c <__vector_29+0xa4>
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	8c 6f       	ori	r24, 0xFC	; 252
 168:	9f 6f       	ori	r25, 0xFF	; 255
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <i>
 170:	0e c0       	rjmp	.+28     	; 0x18e <__vector_29+0xc6>
		else {i = (i+3)%4;}
 172:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <i>
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	03 96       	adiw	r24, 0x03	; 3
 17a:	83 70       	andi	r24, 0x03	; 3
 17c:	90 78       	andi	r25, 0x80	; 128
 17e:	99 23       	and	r25, r25
 180:	24 f4       	brge	.+8      	; 0x18a <__vector_29+0xc2>
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	8c 6f       	ori	r24, 0xFC	; 252
 186:	9f 6f       	ori	r25, 0xFF	; 255
 188:	01 96       	adiw	r24, 0x01	; 1
 18a:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <i>
	}
	
	if (ms > 43478){
 18e:	e7 3d       	cpi	r30, 0xD7	; 215
 190:	29 ea       	ldi	r18, 0xA9	; 169
 192:	f2 07       	cpc	r31, r18
 194:	00 f1       	brcs	.+64     	; 0x1d6 <__vector_29+0x10e>
		sec= (sec+1)%12;
 196:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <sec>
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	01 96       	adiw	r24, 0x01	; 1
 19e:	6c e0       	ldi	r22, 0x0C	; 12
 1a0:	70 e0       	ldi	r23, 0x00	; 0
 1a2:	77 d0       	rcall	.+238    	; 0x292 <__divmodhi4>
 1a4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <sec>
		ms = ms%43478;
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	e6 3d       	cpi	r30, 0xD6	; 214
 1ae:	29 ea       	ldi	r18, 0xA9	; 169
 1b0:	f2 07       	cpc	r31, r18
 1b2:	10 f4       	brcc	.+4      	; 0x1b8 <__vector_29+0xf0>
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	46 ed       	ldi	r20, 0xD6	; 214
 1ba:	59 ea       	ldi	r21, 0xA9	; 169
 1bc:	84 9f       	mul	r24, r20
 1be:	90 01       	movw	r18, r0
 1c0:	85 9f       	mul	r24, r21
 1c2:	30 0d       	add	r19, r0
 1c4:	94 9f       	mul	r25, r20
 1c6:	30 0d       	add	r19, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	e2 1b       	sub	r30, r18
 1cc:	f3 0b       	sbc	r31, r19
 1ce:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__data_end+0x1>
 1d2:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__data_end>
	}
	if (sec>6 && sec < 10){dv = 0;}
 1d6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <sec>
 1da:	99 ef       	ldi	r25, 0xF9	; 249
 1dc:	98 0f       	add	r25, r24
 1de:	93 30       	cpi	r25, 0x03	; 3
 1e0:	28 f4       	brcc	.+10     	; 0x1ec <__vector_29+0x124>
 1e2:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <dv+0x1>
 1e6:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <dv>
 1ea:	10 c0       	rjmp	.+32     	; 0x20c <__vector_29+0x144>
	else if (sec>2 && sec<6){dv = -1;}
 1ec:	83 50       	subi	r24, 0x03	; 3
 1ee:	83 30       	cpi	r24, 0x03	; 3
 1f0:	38 f4       	brcc	.+14     	; 0x200 <__vector_29+0x138>
 1f2:	8f ef       	ldi	r24, 0xFF	; 255
 1f4:	9f ef       	ldi	r25, 0xFF	; 255
 1f6:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <dv+0x1>
 1fa:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <dv>
 1fe:	06 c0       	rjmp	.+12     	; 0x20c <__vector_29+0x144>
	else {dv = 1;}
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <dv+0x1>
 208:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <dv>
	v += dv*v_max*23/2000000;
 20c:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <dv>
 210:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <dv+0x1>
 214:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <v_max>
 218:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <v_max+0x1>
 21c:	42 9f       	mul	r20, r18
 21e:	c0 01       	movw	r24, r0
 220:	43 9f       	mul	r20, r19
 222:	90 0d       	add	r25, r0
 224:	52 9f       	mul	r21, r18
 226:	90 0d       	add	r25, r0
 228:	11 24       	eor	r1, r1
 22a:	27 e1       	ldi	r18, 0x17	; 23
 22c:	28 9f       	mul	r18, r24
 22e:	b0 01       	movw	r22, r0
 230:	29 9f       	mul	r18, r25
 232:	70 0d       	add	r23, r0
 234:	11 24       	eor	r1, r1
 236:	07 2e       	mov	r0, r23
 238:	00 0c       	add	r0, r0
 23a:	88 0b       	sbc	r24, r24
 23c:	99 0b       	sbc	r25, r25
 23e:	20 e8       	ldi	r18, 0x80	; 128
 240:	34 e8       	ldi	r19, 0x84	; 132
 242:	4e e1       	ldi	r20, 0x1E	; 30
 244:	50 e0       	ldi	r21, 0x00	; 0
 246:	38 d0       	rcall	.+112    	; 0x2b8 <__divmodsi4>
 248:	c2 0f       	add	r28, r18
 24a:	d3 1f       	adc	r29, r19
 24c:	d0 93 11 01 	sts	0x0111, r29	; 0x800111 <v+0x1>
 250:	c0 93 10 01 	sts	0x0110, r28	; 0x800110 <v>
	
	
	
	
	
}
 254:	ff 91       	pop	r31
 256:	ef 91       	pop	r30
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	bf 91       	pop	r27
 25e:	af 91       	pop	r26
 260:	9f 91       	pop	r25
 262:	8f 91       	pop	r24
 264:	7f 91       	pop	r23
 266:	6f 91       	pop	r22
 268:	5f 91       	pop	r21
 26a:	4f 91       	pop	r20
 26c:	3f 91       	pop	r19
 26e:	2f 91       	pop	r18
 270:	0f 90       	pop	r0
 272:	0b be       	out	0x3b, r0	; 59
 274:	0f 90       	pop	r0
 276:	0f be       	out	0x3f, r0	; 63
 278:	0f 90       	pop	r0
 27a:	1f 90       	pop	r1
 27c:	18 95       	reti

0000027e <main>:
uint8_t my_phase[] = {0b00000011, 0b00000110, 0b00001100, 0b00001001} ;

int main(void)
{
    /* Replace with your application code */
	DDRC = 0x0F;
 27e:	8f e0       	ldi	r24, 0x0F	; 15
 280:	84 bb       	out	0x14, r24	; 20
	
	
    while (1) 
    {	
		PORTC = my_phase[i];
 282:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <i>
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	e0 50       	subi	r30, 0x00	; 0
 28a:	ff 4f       	sbci	r31, 0xFF	; 255
 28c:	80 81       	ld	r24, Z
 28e:	85 bb       	out	0x15, r24	; 21
 290:	f8 cf       	rjmp	.-16     	; 0x282 <main+0x4>

00000292 <__divmodhi4>:
 292:	97 fb       	bst	r25, 7
 294:	07 2e       	mov	r0, r23
 296:	16 f4       	brtc	.+4      	; 0x29c <__divmodhi4+0xa>
 298:	00 94       	com	r0
 29a:	06 d0       	rcall	.+12     	; 0x2a8 <__divmodhi4_neg1>
 29c:	77 fd       	sbrc	r23, 7
 29e:	08 d0       	rcall	.+16     	; 0x2b0 <__divmodhi4_neg2>
 2a0:	27 d0       	rcall	.+78     	; 0x2f0 <__udivmodhi4>
 2a2:	07 fc       	sbrc	r0, 7
 2a4:	05 d0       	rcall	.+10     	; 0x2b0 <__divmodhi4_neg2>
 2a6:	3e f4       	brtc	.+14     	; 0x2b6 <__divmodhi4_exit>

000002a8 <__divmodhi4_neg1>:
 2a8:	90 95       	com	r25
 2aa:	81 95       	neg	r24
 2ac:	9f 4f       	sbci	r25, 0xFF	; 255
 2ae:	08 95       	ret

000002b0 <__divmodhi4_neg2>:
 2b0:	70 95       	com	r23
 2b2:	61 95       	neg	r22
 2b4:	7f 4f       	sbci	r23, 0xFF	; 255

000002b6 <__divmodhi4_exit>:
 2b6:	08 95       	ret

000002b8 <__divmodsi4>:
 2b8:	05 2e       	mov	r0, r21
 2ba:	97 fb       	bst	r25, 7
 2bc:	16 f4       	brtc	.+4      	; 0x2c2 <__divmodsi4+0xa>
 2be:	00 94       	com	r0
 2c0:	0f d0       	rcall	.+30     	; 0x2e0 <__negsi2>
 2c2:	57 fd       	sbrc	r21, 7
 2c4:	05 d0       	rcall	.+10     	; 0x2d0 <__divmodsi4_neg2>
 2c6:	28 d0       	rcall	.+80     	; 0x318 <__udivmodsi4>
 2c8:	07 fc       	sbrc	r0, 7
 2ca:	02 d0       	rcall	.+4      	; 0x2d0 <__divmodsi4_neg2>
 2cc:	46 f4       	brtc	.+16     	; 0x2de <__divmodsi4_exit>
 2ce:	08 c0       	rjmp	.+16     	; 0x2e0 <__negsi2>

000002d0 <__divmodsi4_neg2>:
 2d0:	50 95       	com	r21
 2d2:	40 95       	com	r20
 2d4:	30 95       	com	r19
 2d6:	21 95       	neg	r18
 2d8:	3f 4f       	sbci	r19, 0xFF	; 255
 2da:	4f 4f       	sbci	r20, 0xFF	; 255
 2dc:	5f 4f       	sbci	r21, 0xFF	; 255

000002de <__divmodsi4_exit>:
 2de:	08 95       	ret

000002e0 <__negsi2>:
 2e0:	90 95       	com	r25
 2e2:	80 95       	com	r24
 2e4:	70 95       	com	r23
 2e6:	61 95       	neg	r22
 2e8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ea:	8f 4f       	sbci	r24, 0xFF	; 255
 2ec:	9f 4f       	sbci	r25, 0xFF	; 255
 2ee:	08 95       	ret

000002f0 <__udivmodhi4>:
 2f0:	aa 1b       	sub	r26, r26
 2f2:	bb 1b       	sub	r27, r27
 2f4:	51 e1       	ldi	r21, 0x11	; 17
 2f6:	07 c0       	rjmp	.+14     	; 0x306 <__udivmodhi4_ep>

000002f8 <__udivmodhi4_loop>:
 2f8:	aa 1f       	adc	r26, r26
 2fa:	bb 1f       	adc	r27, r27
 2fc:	a6 17       	cp	r26, r22
 2fe:	b7 07       	cpc	r27, r23
 300:	10 f0       	brcs	.+4      	; 0x306 <__udivmodhi4_ep>
 302:	a6 1b       	sub	r26, r22
 304:	b7 0b       	sbc	r27, r23

00000306 <__udivmodhi4_ep>:
 306:	88 1f       	adc	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	5a 95       	dec	r21
 30c:	a9 f7       	brne	.-22     	; 0x2f8 <__udivmodhi4_loop>
 30e:	80 95       	com	r24
 310:	90 95       	com	r25
 312:	bc 01       	movw	r22, r24
 314:	cd 01       	movw	r24, r26
 316:	08 95       	ret

00000318 <__udivmodsi4>:
 318:	a1 e2       	ldi	r26, 0x21	; 33
 31a:	1a 2e       	mov	r1, r26
 31c:	aa 1b       	sub	r26, r26
 31e:	bb 1b       	sub	r27, r27
 320:	fd 01       	movw	r30, r26
 322:	0d c0       	rjmp	.+26     	; 0x33e <__udivmodsi4_ep>

00000324 <__udivmodsi4_loop>:
 324:	aa 1f       	adc	r26, r26
 326:	bb 1f       	adc	r27, r27
 328:	ee 1f       	adc	r30, r30
 32a:	ff 1f       	adc	r31, r31
 32c:	a2 17       	cp	r26, r18
 32e:	b3 07       	cpc	r27, r19
 330:	e4 07       	cpc	r30, r20
 332:	f5 07       	cpc	r31, r21
 334:	20 f0       	brcs	.+8      	; 0x33e <__udivmodsi4_ep>
 336:	a2 1b       	sub	r26, r18
 338:	b3 0b       	sbc	r27, r19
 33a:	e4 0b       	sbc	r30, r20
 33c:	f5 0b       	sbc	r31, r21

0000033e <__udivmodsi4_ep>:
 33e:	66 1f       	adc	r22, r22
 340:	77 1f       	adc	r23, r23
 342:	88 1f       	adc	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	1a 94       	dec	r1
 348:	69 f7       	brne	.-38     	; 0x324 <__udivmodsi4_loop>
 34a:	60 95       	com	r22
 34c:	70 95       	com	r23
 34e:	80 95       	com	r24
 350:	90 95       	com	r25
 352:	9b 01       	movw	r18, r22
 354:	ac 01       	movw	r20, r24
 356:	bd 01       	movw	r22, r26
 358:	cf 01       	movw	r24, r30
 35a:	08 95       	ret

0000035c <_exit>:
 35c:	f8 94       	cli

0000035e <__stop_program>:
 35e:	ff cf       	rjmp	.-2      	; 0x35e <__stop_program>
